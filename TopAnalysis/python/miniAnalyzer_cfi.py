import FWCore.ParameterSet.Config as cms

ANALYSISTRIGGERLISTS={
    2018:[
        'HLT_Ele32_WPTight_Gsf_v',
        'HLT_Ele35_WPTight_Gsf_v',
        'HLT_Ele38_WPTight_Gsf_v',
        'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_v',
        'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v',
        'HLT_Ele28_eta2p1_WPTight_Gsf_HT150_v',
        'HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned_v',
        'HLT_IsoMu24_v',
        'HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_v',
        'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_v',
        'HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_v',
        'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_v',
        'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_v',
        'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v',
        'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_v',
        'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_v',
        'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_v',
        'HLT_PFMET120_PFMHT120_IDTight_v',
        'HLT_PFMET200_HBHE_BeamHaloCleaned_v',
        'HLT_PFMETTypeOne200_HBHE_BeamHaloCleaned_v',
        'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_v',
        'HLT_PFMET120_PFMHT120_IDTight_PFHT60_v',
        'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60_v',
        'HLT_PFHT500_PFMET100_PFMHT100_IDTight_v',
        'HLT_PFHT700_PFMET85_PFMHT85_IDTight_v',
        'HLT_PFHT800_PFMET75_PFMHT75_IDTight_v'
    ],
    2017:['HLT_Ele32_WPTight_Gsf_v',
          'HLT_Ele32_WPTight_Gsf_L1DoubleEG_v',
          'HLT_Ele35_WPTight_Gsf_v',
          'HLT_Ele38_WPTight_Gsf_v',
          'HLT_Ele40_WPTight_Gsf_v',
          'HLT_Ele28_eta2p1_WPTight_Gsf_HT150_v',
          'HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned_v',
          'HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_v',
          'HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_v',
          'HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_v',
          'HLT_IsoMu24_v',
          'HLT_IsoMu24_eta2p1_v',
          'HLT_IsoMu27_v',
          'HLT_Mu17_TrkIsoVVL_v',
          'HLT_Mu8_TrkIsoVVL_v',
          'HLT_Mu19_TrkIsoVVL_v',
          'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ',
          'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_v',
          'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_v',
          'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_v',
          'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v',
          'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_v',
          'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v',
          'HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_v',
          'HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_v',
          'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_v',
          'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_v',
          'HLT_Mu50_v',
          'HLT_TkMu50_v',
          'HLT_PFMET120_PFMHT120_IDTight_v',
          'HLT_PFHT700_PFMET85_PFMHT85_IDTight_v',
          'HLT_PFHT800_PFMET75_PFMHT75_IDTight_v',
          'HLT_PFMET250_HBHECleaned_v',
          'HLT_PFHT500_PFMET100_PFMHT100_IDTight_v'
      ],
    2016:['HLT_Ele32_eta2p1_WPTight_Gsf_v',
          'HLT_IsoMu24_v',
          'HLT_IsoMu24_eta2p1_v',
          'HLT_IsoTkMu24_v',
          'HLT_IsoTkMu24_eta2p1_v',
          'HLT_Mu50_v',
          'HLT_TkMu50_v',
          'HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_v',
          'HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_DZ_v',
          'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_v',
          'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v',
          'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_v',
          'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_v',
          'HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_v',
          'HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_v',
          'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_v',
          'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_v',
          'HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_v',
          'HLT_Mu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_v',
          'HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL_v',
          'HLT_TkMu17_TrkIsoVVL_TkMu8_TrkIsoVVL_DZ_v',
          'HLT_DoubleEle24_22_eta2p1_WPLoose_Gsf_v',
          'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v',
          'HLT_MET200_v',
          'HLT_PFMET120_PFMHT120_IDTight_v',
          'HLT_PFHTPFMET170_HBHECleaned_v',
          'HLT_PFMET300_v',
          'HLT_PFHT300_PFMET110_v',
          'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_v'
      ]
}

ANALYSISJETIDS={
    2018:'tightLepVeto',
    2017:'tightLepVeto',
    2016:'looseID'
}

analysis = cms.EDAnalyzer("MiniAnalyzer",
                          saveTree               = cms.bool(True),
                          savePF                 = cms.bool(True),
                          applyFilt              = cms.bool(True),
			  trigObjs               = cms.InputTag("slimmedPatTrigger"),
                          triggerBits            = cms.InputTag("TriggerResults","","HLT"),
                          prescales              = cms.InputTag("patTrigger"),
                          l1prescales            = cms.InputTag("patTrigger","l1min"),
                          triggersToUse          = cms.vstring(ANALYSISTRIGGERLISTS[2017]),
                          rho                    = cms.InputTag("fixedGridRhoFastjetAll"),
                          vertices               = cms.InputTag("offlineSlimmedPrimaryVertices"),
                          muons                  = cms.InputTag("slimmedMuons"),
                          RoccoR                 = cms.string("muoncorr_db.txt"),
                          electrons              = cms.InputTag("slimmedElectrons"),
                          photons                = cms.InputTag("slimmedPhotons"),
                          jets                   = cms.InputTag('updatedPatJetsUpdatedJECBTag'),
                          jetIdToUse             = cms.string(ANALYSISJETIDS[2017]),
                          jecUncSources          = cms.vstring("AbsoluteStat","AbsoluteScale","AbsoluteMPFBias","Fragmentation","SinglePionECAL","SinglePionHCAL","FlavorPureGluon","FlavorPureQuark","FlavorPureCharm","FlavorPureBottom","TimePtEta","RelativeJEREC1","RelativeJEREC2","RelativeJERHF","RelativePtBB","RelativePtEC1","RelativePtEC2","RelativePtHF","RelativeBal","RelativeFSR","RelativeStatFSR","RelativeStatEC","RelativeStatHF","PileUpDataMC","PileUpPtRef","PileUpPtBB","PileUpPtEC1","PileUpPtEC2","PileUpPtHF"),
                          jecUncFile             = cms.string('jecUncSources.txt'),
                          metFilterBits          = cms.InputTag("TriggerResults","","PAT"),
                          metFiltersToUse        = cms.vstring('Flag_HBHENoiseFilter',
                                                               'Flag_HBHENoiseIsoFilter',
                                                               'Flag_EcalDeadCellTriggerPrimitiveFilter',
                                                               'Flag_goodVertices',
                                                               'Flag_eeBadScFilter',
                                                               #'Flag_globalTightHalo2016Filter',//
                                                               'Flag_globalSuperTightHalo2016Filter',
                                                               'Flag_BadPFMuonFilter',
                                                               'Flag_BadPFMuonDzFilter',
                                                               'Flag_ecalBadCalibFilter'
                                                               ),
#                          badChCandFilter        = cms.InputTag('Flag_BadChargedCandidateFilter'),#not recommended yet
#                          badPFMuonFilter        = cms.InputTag('BadPFMuonFilter'),#???
#                          badPFMuonDzFilter      = cms.InputTag('Flag_BadPFMuonDzFilter'),#????
#                          ecalBadCalibFilter     = cms.InputTag('Flag_ecalBadCalibFilter'),#????
                          mets                   = cms.InputTag('slimmedMETsModifiedMET'),
                          pfCands                = cms.InputTag('packedPFCandidates'),
                          ctppsLocalTracks       = cms.InputTag('ctppsLocalTrackLiteProducer'),
                          tagRecoProtons         = cms.InputTag('ctppsProtons:singleRP'),
                          tagMultiRecoProtons    = cms.InputTag('ctppsProtons:multiRP'),
#                          genPhotonsToken        = cms.InputTag('particleLevel:photons'),
#                          genLeptonsToken        = cms.InputTag('particleLevel:leptons'),
#                          genJetsToken           = cms.InputTag('particleLevel:jets'),
#                          genMetsToken           = cms.InputTag('particleLevel:mets'),
#                          genParticlesToken      = cms.InputTag('packedGenParticles'),
#                          particleLevelToken     = cms.InputTag('particleLevel')
)
